

・デプス値を利用したグラデーション導入
　使い方が難しい上にパフォーマンス的なインパクトがでかい。コードの管理も難しい。
　ほとんど遊びのレベルになる
　-> 自由度の高さを考えると、グラデーションではなくUIImageを使った方法が良いと思われる.
　　　またAttachmentにするとSeriesの間に挟む事ができないので、Interfaceに難がある.

・ユーティリティとしてのローダクラス
　クラスにする必要があるのかも怪しいが、やっとくと使い方の幅は広がるかもしれない。
　アベレージとったりゼロパディングが楽になったり効率的だったりクリーンだったり。

・attributedLine -> 動作は確認、ただしDashLineのシェーダ（フラグメント？）の結果が若干おかしいとおもわれる.
　->あの症状で説明がつくのは、横方向の軸のscaleが間違っている事.

・GestureInterpreterのscaleとtranslationを、view空間からdata空間へ変更するための方法が必要.
　いままでのデータ空間に対し中立を保ってきた部分を特定の空間に結びつける事に問題はないのか、とか、問題はいろいろあるが、
　まぁ問題あるまい. どっちかといえば、前作ったstateRestrictionのアレが、不完全な気がしている.
　ビューを回転させるとスクロール動作が変わるのは、そもそもViewの回転に合わせて範囲を変化させる時、
　Viewベースであるから悪い.　だからこれを解消すると、そこそこ安定はするはず.
　だがそもそもの考え方として、rangeFilterの設計が多分間違ってる
　そして、これを解消して物理サイズと紐付けた後、stateRestrictionの考え方及びstateと結びつける部分の設計の悪さが露呈する.
　まずwindowRangeをなくしてみる.

・devアプリで初期表示がおかしい(setNeedsDisplayで治る) -> 急に再現しなくなった？
・なんかどうやら完全にバグった。フレームバッファがイカれるのかなんなのか、とにかくその後まともに描画がされない。
　深刻な事象に反して、その原因が全く予想できない（GPU側の処理のみが完全に止まってるが、普通に描画ループは動いてる）

まず状況を整理する。
・MTKViewでも関係ない
・一定FPSにして、FPSを変えても関係ない
・特によく画面回転で起きる事が多い、
　今の所最低でも1回回転を挟んだあと？な気がするが、直接的にはスクロールでも出ているように見えた
　だがMTKViewでdrawableのサイズのハンドリングをしている以上、問題はそこではないと思われる。
　・・・そういえばMetalChartの中で、わざわざviewのサイズとってる所あったな。でもあれは確か、
　なにか別のabortかなんかで発覚してて、ちょっと違うって事なんだろうか？
　drawableSizeを変えなくても、やはり起きている。
　次はシェーダを変更してみる。

