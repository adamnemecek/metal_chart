

・使いづらいクラスが幾つかある（ユーザインタラクション、MCRenderableの実装クラス）
　次に、それを補助する方法が用意されていない事。
　まずそもそもとして、Updatorを分離した事の価値を理解してもらわなければ、話が始まらないだろう。
　そもそも挙動を明確にする（実装依存の部分をなくす）のがモチベーションであって、単純化する事ではないはずだ。
　それよりも必要なのは、どうしたらあの煩雑な手続きを宣言的に、より短く記述できるかという事だ。
　なにもそれを強制する必要はなく、選択肢が（できるだけ柔軟に）与えられる事が望ましい。

・グラデーション、シャドウ、ボーダーの描画が全体的にサポートされてない
　本当に必要かという話もあるが、グラデーションとボーダーはあってもいいかもしれない
　棒は楽だが、折れ線はちょっと尋常じゃないほど難しい（重なる部分がとても複雑な事になる）
　グラデーションは指定方法が半端じゃなく多くて、シェーダ実装が見えてこない。つまり後回し。

・プロット領域の上に来るグリッド描画は実装優先度が最も高いが、効率的な実装方法は割と難しい。
　擬似的に目盛りを使う事もできるが、ビューのサイズを意識して設定してやる必要があって、割と大変だったりする.
　ただし別オブジェクトに分けると一貫性の維持が大変なので、もしもやるとすれば、軸にその機能をつけるのが自然である。

・未だにフレームワークで出力できてない

・目盛り同期のバグが残っている

・波線はちょっとちゃんとやりたいなーとおもってる。

設定を簡潔に記述するための方法ってどんなだろうか？
まず最低でも必要な手続きだが、

・Chartを作る
・デリゲートに設定する
・GestureInterpreter+Restrictionを設定する
・空間を設定する（10行程度）
・系列を作る、これはその複雑さと数による、でも多分もう少しシンプルにできる
・軸を作って設定する、ラベルを設定する（１軸１０行ちょい）
・系列や軸をchartに追加する

何がこんなに面倒なんだろう・・・

系列の設定はまぁ仕方ないにしても、空間・軸・ジェスチャはある程度簡潔にできるはずではある.
ただし、どうやっても戻り値の制限を超えることはできない。
できるだけシンプルにするのが理想ではあるが、根本的には設定用のオブジェクトを作るというのが解決方になる.

うーん設定項目が多すぎてどうしても楽にできない。
ただ、空間を作るのにあそこまで複数の手順に分かれるのはやっぱり納得がいかない。

